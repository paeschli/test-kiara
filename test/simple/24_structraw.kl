extern [C] include_file_ctx(ctx:ptr(Context), fileName:ptr(char)):void;
def include_file(fileName:ptr(char)) include_file_ctx(getContext(), fileName);

include_file("stdlib.kl");

struct IntFloat {
       a : int;
       b : float;
       c : ptr(double);
};

def intrinsic [llvm] binary . 80 (s:ref(IntFloat), sym:symbol("a")):ref(int)
"define ${rettype} @${mangledName}(${argtype0} %${argname0}, ${argtype1} %${argname1}) nounwind uwtable readnone {"
"entry:"
"  %0 = bitcast ${argtype0} %${argname0} to i8* "
"  %mbr = getelementptr inbounds i8* %0, %size_t 0 "
"  %r = bitcast i8* %mbr to ${rettype} "
"  ret ${rettype} %r"
"}";

def intrinsic [llvm] binary . 80 (s:ref(IntFloat), sym:symbol("b")):ref(float)
"define ${rettype} @${mangledName}(${argtype0} %${argname0}, ${argtype1} %${argname1}) nounwind uwtable readnone {"
"entry:"
"  %0 = bitcast ${argtype0} %${argname0} to i8* "
"  %mbr = getelementptr inbounds i8* %0, %size_t 4 "
"  %r = bitcast i8* %mbr to ${rettype} "
"  ret ${rettype} %r"
"}";

def intrinsic [llvm] binary . 80 (s:ref(IntFloat), sym:symbol("c")):ref(ptr(double))
"define ${rettype} @${mangledName}(${argtype0} %${argname0}, ${argtype1} %${argname1}) nounwind uwtable readnone {"
"entry:"
"  %0 = bitcast ${argtype0} %${argname0} to i8* "
"  %mbr = getelementptr inbounds i8* %0, %size_t 8 "
"  %r = bitcast i8* %mbr to ${rettype} "
"  ret ${rettype} %r"
"}";

# -> operator
def intrinsic [llvm] binary -> 80 (s:ptr(IntFloat), sym:symbol("a")):ref(int)
"define ${rettype} @${mangledName}(${argtype0} %${argname0}, ${argtype1} %${argname1}) nounwind uwtable readnone {"
"entry:"
"  %0 = bitcast ${argtype0} %${argname0} to i8* "
"  %mbr = getelementptr inbounds i8* %0, %size_t 0 "
"  %r = bitcast i8* %mbr to ${rettype} "
"  ret ${rettype} %r"
"}";

def intrinsic [llvm] binary -> 80 (s:ptr(IntFloat), sym:symbol("b")):ref(float)
"define ${rettype} @${mangledName}(${argtype0} %${argname0}, ${argtype1} %${argname1}) nounwind uwtable readnone {"
"entry:"
"  %0 = bitcast ${argtype0} %${argname0} to i8* "
"  %mbr = getelementptr inbounds i8* %0, %size_t 4 "
"  %r = bitcast i8* %mbr to ${rettype} "
"  ret ${rettype} %r"
"}";

def intrinsic [llvm] binary -> 80 (s:ptr(IntFloat), sym:symbol("c")):ref(ptr(double))
"define ${rettype} @${mangledName}(${argtype0} %${argname0}, ${argtype1} %${argname1}) nounwind uwtable readnone {"
"entry:"
"  %0 = bitcast ${argtype0} %${argname0} to i8* "
"  %mbr = getelementptr inbounds i8* %0, %size_t 8 "
"  %r = bitcast i8* %mbr to ${rettype} "
"  ret ${rettype} %r"
"}";


def testA(value:ref(IntFloat)) value.a = 1;

def testB(value:ptr(IntFloat)) value->a = 2;

def test() {
    var value:IntFloat in {
      testA(value);
      value.a = 12;
      value.b = to_float(2.0);
      value.c = to_double_ptr(malloc(sizeof(double)));
      *value.c = 33.0;
      print(value.a); newline();
      print(value.b); newline();
      print(*value.c); newline();
      free(value.c);
    };
};

test();
